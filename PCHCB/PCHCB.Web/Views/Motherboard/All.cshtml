@model AllQueryModel
@{
    ViewBag.Title = "All Motherboards";
}

<h3 class="text-center">@ViewBag.Title</h3>
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-1">

            <div class="form-group">
                <select asp-for="ComponentsPerPage" class="form-control">
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-8">
            <input asp-for="SearchTerm" class="form-control" placeholder="Search...">
        </div>

        <div class="form-group col-md-2">
            <div class="form-group">
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Price (Ascending)</option>
                    <option value="3">Price (Descending)</option>
                </select>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-outline-success" />
            </div>
        </div>

    </div>
</form>

@if (!Model.Motherboards.Any())
{
    <h4 class="text-center">No Motherboards found by the given criteria!</h4>
}

<div class="row mt-4">
    @foreach (var motherboard in Model.Motherboards)
    {
        <partial name="_MotherboardPartial" model="@motherboard" />
    }
</div>
<div class="row">
    @{
        int previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        int maxPage = (int)Math.Ceiling((double)Model.TotalComponents /
        Model.ComponentsPerPage);
    }

    <div class="col-md-1">
        <a class="btn btn-outline-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Motherboard"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Previous</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Motherboards.Any();
    }

    <div class="col-md-1">
        <a class="btn btn-outline-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Motherboard"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">Next</a>
    </div>
</div>