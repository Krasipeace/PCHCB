@using PCHCB.Services.Data.Contracts;
@using PCHCB.Web.Infrastructure.Extensions;
@inject IHomeService HomeService
@model AllQueryModel
@{
    ViewData["Title"] = "All Available Components";
}
<h3 class="text-center">@ViewData["Title"]</h3>
<hr />

@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalComponents / Model.ComponentsPerPage);
}

<form method="get">
    <div class="row">
        <div class="col-md-1">
            <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Home"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Selector"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.ComponentsPerPage)"><<</a>
        </div>

        @{
            bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Cases.Any() ||
            !Model.Cpus.Any() ||
            !Model.Coolers.Any() ||
            !Model.Psus.Any() ||
            !Model.Gpus.Any() ||
            !Model.Rams.Any() ||
            !Model.Motherboards.Any() ||
            !Model.Rams.Any();
        }
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Selector"></label>
                <select asp-for="Selector" class="form-control">
                    <option value="0">All</option>
                    <option value="1">Case</option>
                    <option value="2">Cooler</option>
                    <option value="3">CPU</option>
                    <option value="4">GPU</option>
                    <option value="5">Motherboard</option>
                    <option value="6">Power Supply</option>
                    <option value="7">RAM</option>
                    <option value="8">Storage</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="ComponentsPerPage"></label>
                <select asp-for="ComponentsPerPage" class="form-control">
                    <option value="4">4</option>
                    <option value="8">8</option>
                    <option value="12">12</option>
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Price (Ascending)</option>
                    <option value="3">Price (Descending)</option>
                </select>
            </div>
        </div>

        <div class="col-md-1">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>

        <div class="col-md-1 justify-content-md-end">
            <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Home"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@((int)Model.Selector)"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">>></a>
        </div>
    </div>
</form>

@if (!Model.Cases.Any() || !Model.Coolers.Any() || !Model.Cpus.Any() || !Model.Motherboards.Any() || !Model.Gpus.Any() || !Model.Psus.Any() || !Model.Rams.Any() || !Model.Storages.Any())
{
    <h4 class="text-center">No Components found by the given criteria!</h4>
}

@*Only Model.Cases, because all data was merged in the allQuerySearch*@
<div class="row">
    @foreach (var item in Model.Cases)
    {
        <partial name="_SearchResultPartial" model="@item" />
    }
</div>

